У нас есть класс Transaction, который представляет собой базовый класс для всех видов транзакций. 
Каждый раз, когда пользователь осуществляет транзакцию, мы должны обработать ее в соответствии с ее типом. 
Например, если это покупка товара (PurchaseTransaction()), то мы должны списать деньги с банковского счета пользователя, 
а если это перевод денег (TransferTransaction()), то мы должны зачислить деньги на другой счет.


Файл "transaction.h" - содержит объявление абстрактного класса Transaction и его наследников, определение интерфейса AbstractFactory, а также объявление методов, которые будут использоваться в других файлах.
Файл "transaction.cpp" - содержит реализацию абстрактного класса Transaction и его наследников, а также реализацию методов, объявленных в "Transaction.h".
Файл "transaction_factory.h" - содержит объявление класса TransactionFactory, реализующего интерфейс AbstractFactory.
Файл "transaction_factory.cpp" - содержит реализацию класса TransactionFactory.
Файл "transaction_handler.h" - содержит объявление интерфейса Strategy, а также объявление класса TransactionHandler, который будет использоваться для обработки транзакций.
Файл "transaction_handler.cpp" - содержит реализацию класса TransactionHandler и его методов.
Файл "main.cpp" - содержит основной код программы, в котором создаются объекты транзакций и обрабатываются с помощью объекта TransactionHandler.